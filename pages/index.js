import Head from "next/head";
import Image from "next/image";
import ConnectWallet, { userSession } from "../components/ConnectWallet";
import ContractCallVote from "../components/ContractCallVote";
import styles from "../styles/Home.module.css";
import { callReadOnlyFunction, uintCV, listCV, tupleCV, bufferCV, bufferCVFromString, } from '@stacks/transactions';
//==

import axios from 'axios';
import { StacksTestnet } from "@stacks/network";

export default function Home() {
  const getWasTxMined = async (e) => {
    const btc_TXID = '1a5b9c6c279bd807aec9923495b8b913aab210e7b9b7bfbe3b0fc1e3281c8fbb';
    const blockhash = (await axios.get(`https://btc.getblock.io/rest/tx/1015a8d3-1f41-4d2b-9bdc-0f4c917ae94d/${btc_TXID}.json`)).data;
    const block = (await axios.get(`https://btc.getblock.io/rest/block/1015a8d3-1f41-4d2b-9bdc-0f4c917ae94d/${blockhash.blockhash}.json`)).data;
    console.log(blockhash);
    console.log(block);
    const options = {
      contractAddress: 'STT4SQP5RC1BFAJEQKBHZMXQ8NQ7G118F0XRWTMV',
      contractName: 'clarity-bitcoin',
      functionName: 'was-tx-mined',
      functionArgs: [
        tupleCV(
          {
            version: bufferCV(block.version), parent: bufferCV(block.previousblockhash), 
            merkle_root: bufferCV(block.merkleroot), timestamp: bufferCV(block.time),
            nbits: bufferCV(block.bits), nonce: bufferCV(block.nonce), height: uintCV(block.height)
          }
        ),
        bufferCV(btc_TXID),
        tupleCV(
          {
            tx_index: uintCV(block.nTx),
            hashes: listCV(
              block.tx
                .filter(({ hash }, index) => index < 12)
                .map(({ hash }) => bufferCV(hash))
            ),
            tree_depth: uintCV(block.weight)
          }
        )
      ],
      network: new StacksTestnet(),
      senderAddress: userSession.loadUserData().profile.stxAddress.testnet,
    };
    console.log(options);
    try {
      callReadOnlyFunction(options)
        .then(result => {
          console.log(result);
        });

    } catch (error) {
      console.log(error);
    }

  }
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Next.js + Stacks.js ðŸ‘‹</h1>

        <div className={styles.components}>
          {/* ConnectWallet file: `../components/ConnectWallet.js` */}
          <ConnectWallet />
          {/* ContractCallVote file: `../components/ContractCallVote.js` */}
          <ContractCallVote />
        </div>

        <button className="Connect" onClick={getWasTxMined}>
          Retrieve info on Was-Tx-Mined
        </button>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}
